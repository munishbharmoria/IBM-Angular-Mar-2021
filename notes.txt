Rich Internet Applications
    Better User Experience (Desktop Apps)

ES6 (ECMAScript 6 / ES2015 / ESNext)

1. let
2. const
3. Array destructuring
4. Rest operator (Array)
5. Spread operator (Array)
6. Object destructuring
7. Rest operator (Object)
8. Spread operator (Object)
9. Default arguments
10. Arrow functions
11. template strings
12. Symbol
13. Iterators
14. Classes

class Employee{
    id = 0;
    name = '';
    salary = 0;

    constructor(id, name, salary){
        this.id = id;
        this.name = name;
        this.salary = salary;
    }
    display(){
        console.log(`Id = ${this.id}, Name = ${this.name} and Salary = ${this.salary}`);
    }
}

class FullTimeEmployee extends Employee{
    benefits = '';
    constructor(id, name, salary, benefits){
        super(id, name, salary);
        this.benefits = benefits
    }
}

http://es6-features.org


TypeScript
    JavaScript is loosely typed

var x : number = 10;

function add(x : number, y : number) : number {
    return x + y;
}

add('sadfs',10)

    |
    |
    V
    tsc
    |
    |
    V

var x  = 10;

function add(x , y )  {
    return x + y;
}

interfaces
enums
Classes
Arrow functions
Generics
Access Modifiers

http://typescriptlang.org


Angular Building Blocks
    - Module
        Registry of other application entities (Components, Directives, Pipes, Services & Modules)
        There can be any number of modules in an application
        There has to be a minimum of 1 module
        Application intialization happens through a module
        Dependency Injection is built in

    - Component
        Represents one minor UI concern of the application
        Encapsulates Presntation(View) + Interaction Behavior(Controller) + State(Model)
        Application is a composition of components
        Components can communicate to each other (provided they are accessible)

    - Directive
        Low level DOM manipulation
        2 types
            attribute directive
                - manipulates the attributes of existing dom nodes
                - DO NOT change the structure of the DOM tree
                - syntax : used with []
                - ex: ngClass

            structural directive
                - CHANGES the structure of the DOM tree (by adding new dom nodes / removing existing dom nodes)
                - syntax : used by prefixing with '*'
                - ex: ngIf

    - Pipe
        Data transformation for presentation
        Offers performance benefits 

    - Service
        Encapsulate NON UI responsibilities of the application

Setup An Angular Application
    Angular CLI
    Node.js



From the application folder
    npm start

Day-01 Assignment
JavaScript Array Methods:
    filter
    map
    reduce
    forEach

Creating a component (manual)
    1. Create the files for the component (greeter)
        /app
            /greeter
                greeter.component.ts
                greeter.component.html
                greeter.component.css

    2. Write the component class (greeter.component.ts)

        import { Component } from '@angular/core'
        @Component({
            selector : 'app-greeter',
            templateUrl : 'greeter.component.html',
            styleUrls : ['greeter.component.css']
        })
        export class GreeterComponent{
            /* component state & behavior goes here */
        }

    3. Register the component in the app.module.ts
        import { GreeterComponent } from './greeter/greeter.component'

        @NgModule({
            declarations : [..., GreeterComponent],
            bootstrap : [..., GreeterComponent] //If we want the greeter component to be the root component
        })

    4. Update the index.html to include the newly created component (greeter)

Creating a component (using angular cli)
    In the terminal
        ng generate component greeter (OR) ng g c greeter


ES6 Module
    1. Anything defined in a file (JS/TS) is considered PRIVATE to that file
    2. Any public entity has to be explicitly EXPORTED
    3. Any public entity from another file has to be explicitly IMPORTED

To use an external liberary (moment)
    ng add moment

Handing Async Operations
    1. Callbacks
    2. Promises
    3. Async Await
    4. Observables


Observable X Enumerable (Also called as generator in JS)
    Enumerable (Lazy Iterable)

var values = [3,1,5,2,4]
for(var index=0, count = values.length; index < count; index++){
    var value = values[index]
}

function getEvenNos(list){
    var evenNos = [];
    for(var idx=0, count = list.length; idx < count; idx++){
        var no = list[idx];
        if (no % 2 === 0){
            evenNos.push(no)
        }
    }
    return evenNos
}

function getEvenNos(list){
    var evenNos = [];
    var iter = list[Symbol.iterator]();
    var next = iter.next();
    while(next.done === false){
        var value = next.value
        if (value % 2 === 0){
            evenNos.push(value)
        }
        next = iter.next()
    }
    return evenNos
}

function getEvenNos(list){
    var evenNos = [];
    for(let value of list){
        if (value % 2 === 0)
            evenNos.push(value);
    }
    return evenNos;
}

30 Developers
    5 Years
    From Bangalore
    Specialized in Java

3000 resumes
    (have to 10 candidates to hire 1 suitable developer)

For 30 developers -> 300 candidates to be interviewed

Observable will get the data ONLY in future


Event Driven Applications

employee.dat
id, name, salary, dob, doj.....

Write a program that calculates the avg salary of the employees
    var sum, count
    open the file
    while (!file.EOF){
        read line
        parse line
        sum += salary
        count++
    }
    avg = sum / count
    print avg
    close file

Rx.NET (Reactive Extensions for .NET)
    Can be used to build applications where 'the mouse is the database'
Observable
    filter
    map
    aggregation
    etc


Browser Based Applications
    User Actions (keyboard, mouse) (stream)
    Timers (stream)
    Ajax (Singular)
    Server Sent Events (stream)
    Web Sockets (stream)

json-server 
    node module 
    executed using npm
    expose the data from a json file as restful endpoints
    npx json-server db.json (run this command from the folder that has the file)

Angular Server communication
    HttpClient (HttpClientModule - @angular/common/http)


http://www.amazon.in
http://www.amazon.in/electronics
http://www.amazon.in/electronics/mobile-phones
http://www.amazon.in/electronics/mobile-phones/google
http://www.amazon.in/electronics/mobile-phones/google/pixel-5

http://www.amazon.in/electronics/mobile-phones/google/pixel-5/reviews


Lotus
Lotus/Inbox
Lotus/Inbox/projects
Lotus/Inbox/projects/payroll-master
Lotus/Inbox/projects/payroll-master/bugs
Lotus/Inbox/projects/payroll-master/bugs/bug-101

Every module of the application has to be directly 
    accessible using unique urls

http://myapp.com/products
http://myapp.com/customers

RouteGaurd
    CanActivate